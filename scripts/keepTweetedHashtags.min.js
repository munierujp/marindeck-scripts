(function(){'use strict';const sleep=async timeout=>await new Promise((resolve=>{setTimeout(resolve,timeout)}));const extractHashtags=text=>{const hashtags=window.twttrTxt.extractHashtags(text);return hashtags};const onComposerShown=callback=>{const drawer=document.querySelector('.app-content');let visible;const onChange=mutations=>{if(mutations.length>0){const hasRemovedComposer=mutations.some((({removedNodes:removedNodes})=>Array.from(removedNodes).some((node=>node instanceof HTMLElement&&node.querySelector('textarea.js-compose-text')!==null))));const hasAddedComposer=mutations.some((({addedNodes:addedNodes})=>Array.from(addedNodes).some((node=>node instanceof HTMLElement&&node.querySelector('textarea.js-compose-text')!==null))));if(hasRemovedComposer&&hasAddedComposer){callback(false);visible=false;requestAnimationFrame((()=>{callback(true);visible=true}));return}}const composers=drawer?.querySelectorAll('textarea.js-compose-text')||[];const hasComposer=composers.length===1;if(!hasComposer){if(visible===true||visible===undefined){callback(false)}visible=false;return}if(visible===false||visible===undefined){callback(true)}visible=true};const observer=new MutationObserver(onChange);observer.observe(drawer,{childList:true,subtree:true});onChange([]);return()=>{observer.disconnect()}};const onComposerDisabledStateChange=callback=>{const observer=new MutationObserver((()=>{const composer=document.querySelector('.drawer[data-drawer="compose"] textarea.js-compose-text');const disabled=composer?.disabled??false;callback(disabled)}));onComposerShown((visible=>{if(!visible){observer.disconnect();return}const composer=document.querySelector('.drawer[data-drawer="compose"] textarea.js-compose-text');if(composer===null){return}observer.observe(composer,{attributes:true,attributeFilter:['disabled']})}))};const main=()=>{let hashtags=[];document.body.addEventListener('keyup',(({target:target})=>{if(target===null||!(target instanceof HTMLTextAreaElement)||!target.matches('textarea.js-compose-text')){return}const extractedHashtags=extractHashtags(target.value);hashtags=extractedHashtags}),true);const pasteHashtags=()=>{if(hashtags.length===0){return}const textarea=document.querySelector('textarea.js-compose-text');if(textarea===null){return}textarea.value=` ${hashtags.map((tag=>`#${tag}`)).join(' ')}`;textarea.selectionStart=0;textarea.selectionEnd=0;textarea.dispatchEvent(new Event('change'))};onComposerDisabledStateChange((disabled=>{if(!disabled){pasteHashtags()}}));onComposerShown((visible=>{if(visible){pasteHashtags()}}))};sleep(1e3).then((()=>{main()}))})();